{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent {\n  title = 'fmw-ngapp';\n}\n","<app-main></app-main>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ConnectionServiceModule } from 'ngx-connection-service';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\n\n@NgModule({\n  declarations: [AppComponent, MainComponent],\n  imports: [BrowserModule, ConnectionServiceModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { ConnectionService } from 'ngx-connection-service';\n\nconst INIT_DATA = \"initData\";\nconst OFF_DATA = \"offData\";\nconst SET_DATA = \"setData\";\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.sass'],\n})\nexport class MainComponent implements OnInit, AfterViewInit {\n  hasNetworkConnection: boolean;\n  hasInternetAccess: boolean;\n  online: boolean;\n\n  constructor(private connectionService: ConnectionService) {\n    console.log(this.hasNetworkConnection);\n    console.log(this.hasInternetAccess);\n    this.connectionService.monitor().subscribe((currentState) => {\n      this.hasNetworkConnection = currentState.hasNetworkConnection;\n      this.hasInternetAccess = currentState.hasInternetAccess;\n      if (this.hasNetworkConnection && this.hasInternetAccess) {\n        this.online = true;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    if (!this.online)\n      document.querySelector('.loading').classList.replace('d-flex', 'd-none');\n    console.log('mulai');\n  }\n\n  ngAfterViewInit(): void {\n    document.querySelector('.loading').classList.replace('d-flex', 'd-none');\n    console.log('selesai');\n  }\n}\n","<div class=\"d-flex loading\">\r\n  <div class=\"spinner-grow text-primary\" role=\"status\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n  </div>\r\n  <div class=\"mt-3\">Please Wait..</div>\r\n</div>\r\n\r\n<nav class=\"navbar fixed-top navbar-light bg-light navbar-expand-lg\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" href=\"#\">FindMyWaifu</a>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbarNavAltMarkup\"\r\n      aria-controls=\"navbarNavAltMarkup\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n    >\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      <div class=\"navbar-nav\">\r\n        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        <a class=\"nav-link\" href=\"#\">Settings</a>\r\n        <a class=\"nav-link\" href=\"#\">Donate</a>\r\n        <a class=\"nav-link\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">More</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<div class=\"container mt-5\">\r\n  <div\r\n    class=\"alert al-offline alert-warning alert-dismissible fade show\"\r\n    role=\"alert\"\r\n  >\r\n    You're using <strong>OFLINE MODE</strong>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close\"\r\n      data-bs-dismiss=\"alert\"\r\n      aria-label=\"Close\"\r\n    ></button>\r\n  </div>\r\n\r\n  <div class=\"d-flex main\">\r\n    <img\r\n      src=\"https://i.bandori.party/u/images/Kasumi-Toyama-Power-chibi.YfxFAe.png\"\r\n      alt=\"\"\r\n    />\r\n    <br />\r\n    <span>Click button for find waifu</span> <br />\r\n    <button class=\"btn btn-primary\">Find</button>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}